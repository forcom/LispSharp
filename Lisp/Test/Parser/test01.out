((define (factorial x) (cond ((<= x 1) 1) (else (* x (factorial (- x 1)))))) (factorial 5))

define : [Lisp.Symbol]
factorial : [Lisp.Symbol]
x : [Lisp.Symbol]
cond : [Lisp.Symbol]
<= : [Lisp.Symbol]
x : [Lisp.Symbol]
1 : [System.Int64]
1 : [System.Int64]
else : [Lisp.Symbol]
* : [Lisp.Symbol]
x : [Lisp.Symbol]
factorial : [Lisp.Symbol]
- : [Lisp.Symbol]
x : [Lisp.Symbol]
1 : [System.Int64]
factorial : [Lisp.Symbol]
5 : [System.Int64]